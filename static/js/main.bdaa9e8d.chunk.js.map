{"version":3,"sources":["components/Header.js","components/CardItem.js","components/Home.js","components/AboutPage.js","App.js","serviceWorker.js","index.js"],"names":["Header","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","style","paddingLeft","to","className","CardItem","useState","apiData","setApiData","rightList","setRightList","filterRight","setFilterRight","right","removeItem","useEffect","data","console","log","map","item","onClick","toast","success","first_name","last_name","push","handleTransfer","paddingRight","src","avatar","height","width","borderRadius","flexDirection","backgroundColor","color","length","Set","result","filter","ar","find","rm","handleRemove","warn","handleSelectRemove","Home","AboutPage","Component","App","exact","path","component","HomePage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bdaa9e8d.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\nimport { Link, NavLink, Redirect } from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <nav class=\"navbar navbar-expand-sm  navbar-light \">\n      <a class=\"navbar-brand\" href=\"#\">\n        TotalCloud\n      </a>\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavDropdown\"\n        aria-controls=\"navbarNavDropdown\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse flex-grow-0\" id=\"navbarNavDropdown\">\n        <ul class=\"navbar-nav  ml-auto \">\n          <li class=\"nav-item \" style={{ paddingLeft: 600 }}>\n            <NavLink to=\"/home\" className=\"nav-link\">\n              Home\n            </NavLink>\n          </li>\n          <li class=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n              About\n            </Link>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              Features\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              Pricing\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              ScreenShots\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              Contact\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport data from '../constant/db.json';\nimport './CardItem.css';\nimport { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\nfunction CardItem() {\n  const [apiData, setApiData] = useState([]);\n  const [rightList, setRightList] = useState([]);\n  const [filterRight, setFilterRight] = useState([]);\n  const right = [];\n  const removeItem = [];\n\n  useEffect(() => {\n    setApiData(data);\n  }, []);\n\n  const handleTransfer = item => {\n    toast.success('Selected' + ' ' + item.first_name + item.last_name);\n    right.push(...rightList, item);\n  };\n\n  const handleAssign = () => {\n    if (right.length > 0) {\n      setRightList([...new Set(right)]);\n    }\n  };\n\n  const handleSelectRemove = item => {\n    toast.warn('Selected ' + item.first_name + item.last_name);\n    removeItem.push(...filterRight, item);\n    setFilterRight(removeItem);\n  };\n  console.log(filterRight);\n\n  const handleRemove = () => {\n    let result = rightList.filter(\n      ar => !filterRight.find(rm => ar.first_name === rm.first_name)\n    );\n    setRightList(result);\n    toast.success('items deleted');\n  };\n  return (\n    <div className=\"boxs\">\n      <div class=\"row\">\n        <div class=\"column\">\n          <div class=\"card\">\n            {apiData.map(item => (\n              <div className=\"row row1\" onClick={() => handleTransfer(item)}>\n                <div style={{ paddingRight: 10 }}>\n                  <img\n                    src={item.avatar}\n                    height={30}\n                    width={30}\n                    style={{ borderRadius: '50%' }}\n                  />\n                </div>\n                <div>\n                  <p>\n                    {item.first_name} {item.last_name}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div class=\"column1\">\n          <div class=\"column\" style={{ flexDirection: 'column' }}>\n            <button\n              style={{ backgroundColor: 'dodgerblue', color: 'white' }}\n              onClick={() => handleAssign()}\n            >\n              Assign &raquo;\n            </button>\n            <button\n              style={{ backgroundColor: 'dodgerblue', color: 'white' }}\n              onClick={() => handleRemove()}\n            >\n              &laquo; Revoke\n            </button>\n          </div>\n        </div>\n        <div class=\"column3\">\n          <div class=\"card\">\n            {rightList.map(item => (\n              <div\n                className=\"row row1\"\n                onClick={() => handleSelectRemove(item)}\n              >\n                <div style={{ paddingRight: 10 }}>\n                  <img\n                    src={item.avatar}\n                    height={30}\n                    width={30}\n                    style={{ borderRadius: '50%' }}\n                  />\n                </div>\n                <div>\n                  <p>\n                    {item.first_name} {item.last_name}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n       \n      </div>\n    </div>\n  );\n}\n\nexport default CardItem;\n","import React from 'react';\n\nfunction Home() {\n  return (\n    <div>\n      <p>Hello from the Home</p>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n  render() {\n    return (\n      <div>\n        <p>hello from About</p>\n      </div>\n    );\n  }\n}\n","/*\n * @Author: Devesh Agnihotri\n * @Date: 2019-09-29 04:22:53\n * @Last Modified by: Devesh Agnihotri\n * @Last Modified time: 2019-09-29 04:48:35\n */\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport CardItem from './components/CardItem';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport HomePage from './components/Home';\nimport AboutPage from './components/AboutPage';\n\nfunction App() {\n  return (\n    <>\n      <ToastContainer />\n      <div className=\"App\">\n        <div className=\"background\"></div>\n        <div className=\"headers\">\n          <Header />\n        </div>\n        <div className=\"title-container\">\n          <h3 className=\"title-heading\">\n            The Best App to Increase Your Productivity\n          </h3>\n        </div>\n        <div className=\"box-container\">\n          <CardItem />\n        </div>\n      </div>\n      <Switch>\n        <Route exact path=\"/home\" component={HomePage} />\n        <Route path=\"/about\" component={AboutPage} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}